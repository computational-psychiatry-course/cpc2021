% h2gf demo using the data: PRSSI, EEG, long version of SRL (srl2)
%
% plot boxplots for all parameters and LME
% =========================================================================
% h2gf_demo_srl2_summary(4000,1,1)
% =========================================================================

function h2gf_demo_srl2_stats_plot(config_file)

addpath(genpath('/cluster/project/tnu/igsandra/tapas/'));
maskSamples = {'1000', '3000', '4000', '5000'};

%% specify which configuration of the binary hgf has been used
if config_file == 1
    configtype = 'estka2';
elseif config_file == 2
    configtype = 'estka2mu2';
elseif config_file == 3
    configtype = 'estka2mu3';
elseif config_file == 4
    configtype = 'estka2om3';
elseif config_file == 5
    configtype = 'estka2sa2';
elseif config_file == 6
    configtype = 'estka2sa3';
elseif config_file == 7
    configtype = 'estom2';
elseif config_file == 8
    configtype = 'estom2mu2';
elseif config_file == 9
    configtype = 'estom2mu3';
elseif config_file == 10
    configtype = 'estom2om3';
elseif config_file == 11
    configtype = 'estom2sa2';
elseif config_file == 12
    configtype = 'estom2sa3';
end
disp(['config file:', configtype]);
disp('**************************************');
disp(['running stats for h2gf and hgf']);
disp('**************************************');
%% define where results have been stored:
f = mfilename('fullpath');

[tdir, ~, ~] = fileparts(f);

maskResFolder = ([tdir,'/results/']);
% maskResFolder = (['D:\PRSSI\h2gf\/results/']);
cd(maskResFolder);

for e = 1:6 %length(listFiles)
    for m = 1:4
        % Find data:
        All_h2gf(e).eta(m).samples    = load(fullfile([maskResFolder,'/',configtype,'/eta', num2str(e),'/', maskSamples{m},'/AllInv_srl2_h2gf_',configtype,'_eta',num2str(e),'_',maskSamples{m},'.mat']));
    end
end

All_hgf   = load(fullfile([maskResFolder,'/hgf/',configtype,'/hgf_3l_est_srl2_summary',configtype,'.mat']));


%% plot table ka
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_ka = [mean(All_h2gf(1).eta(1).samples.ka(:,1));mean(All_h2gf(2).eta(1).samples.ka(:,1)); mean(All_h2gf(3).eta(1).samples.ka(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.ka(:,1));mean(All_h2gf(5).eta(1).samples.ka(:,1)); mean(All_h2gf(6).eta(1).samples.ka(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.ka(:,1));mean(All_h2gf(2).eta(2).samples.ka(:,1)); mean(All_h2gf(3).eta(2).samples.ka(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.ka(:,1));mean(All_h2gf(5).eta(2).samples.ka(:,1)); mean(All_h2gf(6).eta(2).samples.ka(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.ka(:,1));mean(All_h2gf(2).eta(3).samples.ka(:,1)); mean(All_h2gf(3).eta(3).samples.ka(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.ka(:,1));mean(All_h2gf(5).eta(3).samples.ka(:,1)); mean(All_h2gf(6).eta(3).samples.ka(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.ka(:,1));mean(All_h2gf(2).eta(4).samples.ka(:,1)); mean(All_h2gf(3).eta(4).samples.ka(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.ka(:,1));mean(All_h2gf(5).eta(4).samples.ka(:,1)); mean(All_h2gf(6).eta(4).samples.ka(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.ka)];
ste_ka = [std(All_h2gf(1).eta(1).samples.ka(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.ka)); ...
    std(All_h2gf(2).eta(1).samples.ka(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.ka)); ...
    std(All_h2gf(3).eta(1).samples.ka(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.ka)); ...
    std(All_h2gf(4).eta(1).samples.ka(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.ka)); ...
    std(All_h2gf(5).eta(1).samples.ka(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.ka)); ...
    std(All_h2gf(6).eta(1).samples.ka(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.ka)); ...
    std(All_h2gf(1).eta(2).samples.ka(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.ka)); ...
    std(All_h2gf(2).eta(2).samples.ka(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.ka)); ...
    std(All_h2gf(3).eta(2).samples.ka(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.ka)); ...
    std(All_h2gf(4).eta(2).samples.ka(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.ka)); ...
    std(All_h2gf(5).eta(2).samples.ka(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.ka)); ...
    std(All_h2gf(6).eta(2).samples.ka(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.ka)); ...
    std(All_h2gf(1).eta(3).samples.ka(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.ka)); ...
    std(All_h2gf(2).eta(3).samples.ka(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.ka)); ...
    std(All_h2gf(3).eta(3).samples.ka(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.ka)); ...
    std(All_h2gf(4).eta(3).samples.ka(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.ka)); ...
    std(All_h2gf(5).eta(3).samples.ka(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.ka)); ...
    std(All_h2gf(6).eta(3).samples.ka(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.ka)); ...
    std(All_h2gf(1).eta(4).samples.ka(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.ka)); ...
    std(All_h2gf(2).eta(4).samples.ka(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.ka)); ...
    std(All_h2gf(3).eta(4).samples.ka(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.ka)); ...
    std(All_h2gf(4).eta(4).samples.ka(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.ka)); ...
    std(All_h2gf(5).eta(4).samples.ka(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.ka)); ...
    std(All_h2gf(6).eta(4).samples.ka(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.ka)); ...
    std(All_hgf.hgf_est_srl2_summary.ka)/sqrt(length(All_hgf.hgf_est_srl2_summary.ka));];

T = table(mean_ka,ste_ka,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_ka_',configtype],'fig');
print(['srl2_stats_ka_',configtype],'-dtiff');

%% plot table mu2
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_mu2_0 = [mean(All_h2gf(1).eta(1).samples.mu2_0(:,1));mean(All_h2gf(2).eta(1).samples.mu2_0(:,1)); mean(All_h2gf(3).eta(1).samples.mu2_0(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.mu2_0(:,1));mean(All_h2gf(5).eta(1).samples.mu2_0(:,1)); mean(All_h2gf(6).eta(1).samples.mu2_0(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.mu2_0(:,1));mean(All_h2gf(2).eta(2).samples.mu2_0(:,1)); mean(All_h2gf(3).eta(2).samples.mu2_0(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.mu2_0(:,1));mean(All_h2gf(5).eta(2).samples.mu2_0(:,1)); mean(All_h2gf(6).eta(2).samples.mu2_0(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.mu2_0(:,1));mean(All_h2gf(2).eta(3).samples.mu2_0(:,1)); mean(All_h2gf(3).eta(3).samples.mu2_0(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.mu2_0(:,1));mean(All_h2gf(5).eta(3).samples.mu2_0(:,1)); mean(All_h2gf(6).eta(3).samples.mu2_0(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.mu2_0(:,1));mean(All_h2gf(2).eta(4).samples.mu2_0(:,1)); mean(All_h2gf(3).eta(4).samples.mu2_0(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.mu2_0(:,1));mean(All_h2gf(5).eta(4).samples.mu2_0(:,1)); mean(All_h2gf(6).eta(4).samples.mu2_0(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.mu2_0)];
ste_mu2_0 = [std(All_h2gf(1).eta(1).samples.mu2_0(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.mu2_0)); ...
    std(All_h2gf(2).eta(1).samples.mu2_0(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.mu2_0)); ...
    std(All_h2gf(3).eta(1).samples.mu2_0(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.mu2_0)); ...
    std(All_h2gf(4).eta(1).samples.mu2_0(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.mu2_0)); ...
    std(All_h2gf(5).eta(1).samples.mu2_0(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.mu2_0)); ...
    std(All_h2gf(6).eta(1).samples.mu2_0(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.mu2_0)); ...
    std(All_h2gf(1).eta(2).samples.mu2_0(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.mu2_0)); ...
    std(All_h2gf(2).eta(2).samples.mu2_0(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.mu2_0)); ...
    std(All_h2gf(3).eta(2).samples.mu2_0(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.mu2_0)); ...
    std(All_h2gf(4).eta(2).samples.mu2_0(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.mu2_0)); ...
    std(All_h2gf(5).eta(2).samples.mu2_0(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.mu2_0)); ...
    std(All_h2gf(6).eta(2).samples.mu2_0(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.mu2_0)); ...
    std(All_h2gf(1).eta(3).samples.mu2_0(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.mu2_0)); ...
    std(All_h2gf(2).eta(3).samples.mu2_0(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.mu2_0)); ...
    std(All_h2gf(3).eta(3).samples.mu2_0(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.mu2_0)); ...
    std(All_h2gf(4).eta(3).samples.mu2_0(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.mu2_0)); ...
    std(All_h2gf(5).eta(3).samples.mu2_0(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.mu2_0)); ...
    std(All_h2gf(6).eta(3).samples.mu2_0(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.mu2_0)); ...
    std(All_h2gf(1).eta(4).samples.mu2_0(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.mu2_0)); ...
    std(All_h2gf(2).eta(4).samples.mu2_0(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.mu2_0)); ...
    std(All_h2gf(3).eta(4).samples.mu2_0(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.mu2_0)); ...
    std(All_h2gf(4).eta(4).samples.mu2_0(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.mu2_0)); ...
    std(All_h2gf(5).eta(4).samples.mu2_0(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.mu2_0)); ...
    std(All_h2gf(6).eta(4).samples.mu2_0(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.mu2_0)); ...
    std(All_hgf.hgf_est_srl2_summary.mu2_0)/sqrt(length(All_hgf.hgf_est_srl2_summary.mu2_0));];

T = table(mean_mu2_0,ste_mu2_0,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_mu2_0_',configtype],'fig');
print(['srl2_stats_mu2_0_',configtype],'-dtiff');

%% plot table mu3
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_mu3_0 = [mean(All_h2gf(1).eta(1).samples.mu3_0(:,1));mean(All_h2gf(2).eta(1).samples.mu3_0(:,1)); mean(All_h2gf(3).eta(1).samples.mu3_0(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.mu3_0(:,1));mean(All_h2gf(5).eta(1).samples.mu3_0(:,1)); mean(All_h2gf(6).eta(1).samples.mu3_0(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.mu3_0(:,1));mean(All_h2gf(2).eta(2).samples.mu3_0(:,1)); mean(All_h2gf(3).eta(2).samples.mu3_0(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.mu3_0(:,1));mean(All_h2gf(5).eta(2).samples.mu3_0(:,1)); mean(All_h2gf(6).eta(2).samples.mu3_0(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.mu3_0(:,1));mean(All_h2gf(2).eta(3).samples.mu3_0(:,1)); mean(All_h2gf(3).eta(3).samples.mu3_0(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.mu3_0(:,1));mean(All_h2gf(5).eta(3).samples.mu3_0(:,1)); mean(All_h2gf(6).eta(3).samples.mu3_0(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.mu3_0(:,1));mean(All_h2gf(2).eta(4).samples.mu3_0(:,1)); mean(All_h2gf(3).eta(4).samples.mu3_0(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.mu3_0(:,1));mean(All_h2gf(5).eta(4).samples.mu3_0(:,1)); mean(All_h2gf(6).eta(4).samples.mu3_0(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.mu3_0)];
ste_mu3_0 = [std(All_h2gf(1).eta(1).samples.mu3_0(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.mu3_0)); ...
    std(All_h2gf(2).eta(1).samples.mu3_0(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.mu3_0)); ...
    std(All_h2gf(3).eta(1).samples.mu3_0(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.mu3_0)); ...
    std(All_h2gf(4).eta(1).samples.mu3_0(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.mu3_0)); ...
    std(All_h2gf(5).eta(1).samples.mu3_0(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.mu3_0)); ...
    std(All_h2gf(6).eta(1).samples.mu3_0(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.mu3_0)); ...
    std(All_h2gf(1).eta(2).samples.mu3_0(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.mu3_0)); ...
    std(All_h2gf(2).eta(2).samples.mu3_0(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.mu3_0)); ...
    std(All_h2gf(3).eta(2).samples.mu3_0(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.mu3_0)); ...
    std(All_h2gf(4).eta(2).samples.mu3_0(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.mu3_0)); ...
    std(All_h2gf(5).eta(2).samples.mu3_0(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.mu3_0)); ...
    std(All_h2gf(6).eta(2).samples.mu3_0(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.mu3_0)); ...
    std(All_h2gf(1).eta(3).samples.mu3_0(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.mu3_0)); ...
    std(All_h2gf(2).eta(3).samples.mu3_0(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.mu3_0)); ...
    std(All_h2gf(3).eta(3).samples.mu3_0(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.mu3_0)); ...
    std(All_h2gf(4).eta(3).samples.mu3_0(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.mu3_0)); ...
    std(All_h2gf(5).eta(3).samples.mu3_0(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.mu3_0)); ...
    std(All_h2gf(6).eta(3).samples.mu3_0(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.mu3_0)); ...
    std(All_h2gf(1).eta(4).samples.mu3_0(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.mu3_0)); ...
    std(All_h2gf(2).eta(4).samples.mu3_0(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.mu3_0)); ...
    std(All_h2gf(3).eta(4).samples.mu3_0(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.mu3_0)); ...
    std(All_h2gf(4).eta(4).samples.mu3_0(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.mu3_0)); ...
    std(All_h2gf(5).eta(4).samples.mu3_0(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.mu3_0)); ...
    std(All_h2gf(6).eta(4).samples.mu3_0(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.mu3_0)); ...
    std(All_hgf.hgf_est_srl2_summary.mu3_0)/sqrt(length(All_hgf.hgf_est_srl2_summary.mu3_0));];

T = table(mean_mu3_0,ste_mu3_0,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_mu3_0_',configtype],'fig');
print(['srl2_stats_mu3_0_',configtype],'-dtiff');

%% plot table sa2_0
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_sa2_0 = [mean(All_h2gf(1).eta(1).samples.sa2_0(:,1));mean(All_h2gf(2).eta(1).samples.sa2_0(:,1)); mean(All_h2gf(3).eta(1).samples.sa2_0(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.sa2_0(:,1));mean(All_h2gf(5).eta(1).samples.sa2_0(:,1)); mean(All_h2gf(6).eta(1).samples.sa2_0(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.sa2_0(:,1));mean(All_h2gf(2).eta(2).samples.sa2_0(:,1)); mean(All_h2gf(3).eta(2).samples.sa2_0(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.sa2_0(:,1));mean(All_h2gf(5).eta(2).samples.sa2_0(:,1)); mean(All_h2gf(6).eta(2).samples.sa2_0(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.sa2_0(:,1));mean(All_h2gf(2).eta(3).samples.sa2_0(:,1)); mean(All_h2gf(3).eta(3).samples.sa2_0(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.sa2_0(:,1));mean(All_h2gf(5).eta(3).samples.sa2_0(:,1)); mean(All_h2gf(6).eta(3).samples.sa2_0(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.sa2_0(:,1));mean(All_h2gf(2).eta(4).samples.sa2_0(:,1)); mean(All_h2gf(3).eta(4).samples.sa2_0(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.sa2_0(:,1));mean(All_h2gf(5).eta(4).samples.sa2_0(:,1)); mean(All_h2gf(6).eta(4).samples.sa2_0(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.sa2_0)];
ste_sa2_0 = [std(All_h2gf(1).eta(1).samples.sa2_0(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.sa2_0)); ...
    std(All_h2gf(2).eta(1).samples.sa2_0(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.sa2_0)); ...
    std(All_h2gf(3).eta(1).samples.sa2_0(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.sa2_0)); ...
    std(All_h2gf(4).eta(1).samples.sa2_0(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.sa2_0)); ...
    std(All_h2gf(5).eta(1).samples.sa2_0(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.sa2_0)); ...
    std(All_h2gf(6).eta(1).samples.sa2_0(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.sa2_0)); ...
    std(All_h2gf(1).eta(2).samples.sa2_0(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.sa2_0)); ...
    std(All_h2gf(2).eta(2).samples.sa2_0(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.sa2_0)); ...
    std(All_h2gf(3).eta(2).samples.sa2_0(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.sa2_0)); ...
    std(All_h2gf(4).eta(2).samples.sa2_0(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.sa2_0)); ...
    std(All_h2gf(5).eta(2).samples.sa2_0(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.sa2_0)); ...
    std(All_h2gf(6).eta(2).samples.sa2_0(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.sa2_0)); ...
    std(All_h2gf(1).eta(3).samples.sa2_0(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.sa2_0)); ...
    std(All_h2gf(2).eta(3).samples.sa2_0(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.sa2_0)); ...
    std(All_h2gf(3).eta(3).samples.sa2_0(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.sa2_0)); ...
    std(All_h2gf(4).eta(3).samples.sa2_0(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.sa2_0)); ...
    std(All_h2gf(5).eta(3).samples.sa2_0(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.sa2_0)); ...
    std(All_h2gf(6).eta(3).samples.sa2_0(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.sa2_0)); ...
    std(All_h2gf(1).eta(4).samples.sa2_0(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.sa2_0)); ...
    std(All_h2gf(2).eta(4).samples.sa2_0(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.sa2_0)); ...
    std(All_h2gf(3).eta(4).samples.sa2_0(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.sa2_0)); ...
    std(All_h2gf(4).eta(4).samples.sa2_0(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.sa2_0)); ...
    std(All_h2gf(5).eta(4).samples.sa2_0(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.sa2_0)); ...
    std(All_h2gf(6).eta(4).samples.sa2_0(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.sa2_0)); ...
    std(All_hgf.hgf_est_srl2_summary.sa2_0)/sqrt(length(All_hgf.hgf_est_srl2_summary.sa2_0));];

T = table(mean_sa2_0,ste_sa2_0,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_sa2_0_',configtype],'fig');
print(['srl2_stats_sa2_0_',configtype],'-dtiff');

%% plot table sa3_0
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_sa3_0 = [mean(All_h2gf(1).eta(1).samples.sa3_0(:,1));mean(All_h2gf(2).eta(1).samples.sa3_0(:,1)); mean(All_h2gf(3).eta(1).samples.sa3_0(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.sa3_0(:,1));mean(All_h2gf(5).eta(1).samples.sa3_0(:,1)); mean(All_h2gf(6).eta(1).samples.sa3_0(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.sa3_0(:,1));mean(All_h2gf(2).eta(2).samples.sa3_0(:,1)); mean(All_h2gf(3).eta(2).samples.sa3_0(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.sa3_0(:,1));mean(All_h2gf(5).eta(2).samples.sa3_0(:,1)); mean(All_h2gf(6).eta(2).samples.sa3_0(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.sa3_0(:,1));mean(All_h2gf(2).eta(3).samples.sa3_0(:,1)); mean(All_h2gf(3).eta(3).samples.sa3_0(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.sa3_0(:,1));mean(All_h2gf(5).eta(3).samples.sa3_0(:,1)); mean(All_h2gf(6).eta(3).samples.sa3_0(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.sa3_0(:,1));mean(All_h2gf(2).eta(4).samples.sa3_0(:,1)); mean(All_h2gf(3).eta(4).samples.sa3_0(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.sa3_0(:,1));mean(All_h2gf(5).eta(4).samples.sa3_0(:,1)); mean(All_h2gf(6).eta(4).samples.sa3_0(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.sa3_0)];
ste_sa3_0 = [std(All_h2gf(1).eta(1).samples.sa3_0(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.sa3_0)); ...
    std(All_h2gf(2).eta(1).samples.sa3_0(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.sa3_0)); ...
    std(All_h2gf(3).eta(1).samples.sa3_0(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.sa3_0)); ...
    std(All_h2gf(4).eta(1).samples.sa3_0(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.sa3_0)); ...
    std(All_h2gf(5).eta(1).samples.sa3_0(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.sa3_0)); ...
    std(All_h2gf(6).eta(1).samples.sa3_0(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.sa3_0)); ...
    std(All_h2gf(1).eta(2).samples.sa3_0(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.sa3_0)); ...
    std(All_h2gf(2).eta(2).samples.sa3_0(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.sa3_0)); ...
    std(All_h2gf(3).eta(2).samples.sa3_0(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.sa3_0)); ...
    std(All_h2gf(4).eta(2).samples.sa3_0(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.sa3_0)); ...
    std(All_h2gf(5).eta(2).samples.sa3_0(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.sa3_0)); ...
    std(All_h2gf(6).eta(2).samples.sa3_0(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.sa3_0)); ...
    std(All_h2gf(1).eta(3).samples.sa3_0(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.sa3_0)); ...
    std(All_h2gf(2).eta(3).samples.sa3_0(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.sa3_0)); ...
    std(All_h2gf(3).eta(3).samples.sa3_0(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.sa3_0)); ...
    std(All_h2gf(4).eta(3).samples.sa3_0(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.sa3_0)); ...
    std(All_h2gf(5).eta(3).samples.sa3_0(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.sa3_0)); ...
    std(All_h2gf(6).eta(3).samples.sa3_0(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.sa3_0)); ...
    std(All_h2gf(1).eta(4).samples.sa3_0(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.sa3_0)); ...
    std(All_h2gf(2).eta(4).samples.sa3_0(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.sa3_0)); ...
    std(All_h2gf(3).eta(4).samples.sa3_0(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.sa3_0)); ...
    std(All_h2gf(4).eta(4).samples.sa3_0(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.sa3_0)); ...
    std(All_h2gf(5).eta(4).samples.sa3_0(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.sa3_0)); ...
    std(All_h2gf(6).eta(4).samples.sa3_0(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.sa3_0)); ...
    std(All_hgf.hgf_est_srl2_summary.sa3_0)/sqrt(length(All_hgf.hgf_est_srl2_summary.sa3_0));];

T = table(mean_sa3_0,ste_sa3_0,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_sa3_0_',configtype],'fig');
print(['srl2_stats_sa3_0_',configtype],'-dtiff');

%% plot table om3
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_om3 = [mean(All_h2gf(1).eta(1).samples.om3(:,1));mean(All_h2gf(2).eta(1).samples.om3(:,1)); mean(All_h2gf(3).eta(1).samples.om3(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.om3(:,1));mean(All_h2gf(5).eta(1).samples.om3(:,1)); mean(All_h2gf(6).eta(1).samples.om3(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.om3(:,1));mean(All_h2gf(2).eta(2).samples.om3(:,1)); mean(All_h2gf(3).eta(2).samples.om3(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.om3(:,1));mean(All_h2gf(5).eta(2).samples.om3(:,1)); mean(All_h2gf(6).eta(2).samples.om3(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.om3(:,1));mean(All_h2gf(2).eta(3).samples.om3(:,1)); mean(All_h2gf(3).eta(3).samples.om3(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.om3(:,1));mean(All_h2gf(5).eta(3).samples.om3(:,1)); mean(All_h2gf(6).eta(3).samples.om3(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.om3(:,1));mean(All_h2gf(2).eta(4).samples.om3(:,1)); mean(All_h2gf(3).eta(4).samples.om3(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.om3(:,1));mean(All_h2gf(5).eta(4).samples.om3(:,1)); mean(All_h2gf(6).eta(4).samples.om3(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.om3)];
ste_om3 = [std(All_h2gf(1).eta(1).samples.om3(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.om3)); ...
    std(All_h2gf(2).eta(1).samples.om3(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.om3)); ...
    std(All_h2gf(3).eta(1).samples.om3(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.om3)); ...
    std(All_h2gf(4).eta(1).samples.om3(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.om3)); ...
    std(All_h2gf(5).eta(1).samples.om3(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.om3)); ...
    std(All_h2gf(6).eta(1).samples.om3(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.om3)); ...
    std(All_h2gf(1).eta(2).samples.om3(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.om3)); ...
    std(All_h2gf(2).eta(2).samples.om3(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.om3)); ...
    std(All_h2gf(3).eta(2).samples.om3(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.om3)); ...
    std(All_h2gf(4).eta(2).samples.om3(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.om3)); ...
    std(All_h2gf(5).eta(2).samples.om3(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.om3)); ...
    std(All_h2gf(6).eta(2).samples.om3(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.om3)); ...
    std(All_h2gf(1).eta(3).samples.om3(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.om3)); ...
    std(All_h2gf(2).eta(3).samples.om3(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.om3)); ...
    std(All_h2gf(3).eta(3).samples.om3(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.om3)); ...
    std(All_h2gf(4).eta(3).samples.om3(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.om3)); ...
    std(All_h2gf(5).eta(3).samples.om3(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.om3)); ...
    std(All_h2gf(6).eta(3).samples.om3(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.om3)); ...
    std(All_h2gf(1).eta(4).samples.om3(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.om3)); ...
    std(All_h2gf(2).eta(4).samples.om3(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.om3)); ...
    std(All_h2gf(3).eta(4).samples.om3(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.om3)); ...
    std(All_h2gf(4).eta(4).samples.om3(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.om3)); ...
    std(All_h2gf(5).eta(4).samples.om3(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.om3)); ...
    std(All_h2gf(6).eta(4).samples.om3(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.om3)); ...
    std(All_hgf.hgf_est_srl2_summary.om3)/sqrt(length(All_hgf.hgf_est_srl2_summary.om3));];

T = table(mean_om3,ste_om3,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_om3_',configtype],'fig');
print(['srl2_stats_om3_',configtype],'-dtiff');

%% plot table ze
ModelName = {['h2gf ',configtype,', eta1, 1000'];['h2gf ',configtype,', eta2, 1000'];['h2gf ',configtype,', eta3, 1000'];['h2gf ',configtype,', eta4, 1000'];['h2gf ',configtype,', eta5, 1000']; ['h2gf ',configtype,', eta6, 1000']; ...
    ['h2gf ',configtype,', eta1, 3000'];['h2gf ',configtype,', eta2, 3000'];['h2gf ',configtype,', eta3, 3000'];['h2gf ',configtype,', eta4, 3000'];['h2gf ',configtype,', eta5, 3000']; ['h2gf ',configtype,', eta6, 3000']; ...
    ['h2gf ',configtype,', eta1, 4000'];['h2gf ',configtype,', eta2, 4000'];['h2gf ',configtype,', eta3, 4000'];['h2gf ',configtype,', eta4, 4000'];['h2gf ',configtype,', eta5, 4000']; ['h2gf ',configtype,', eta6, 4000']; ...
    ['h2gf ',configtype,', eta1, 5000'];['h2gf ',configtype,', eta2, 5000'];['h2gf ',configtype,', eta3, 5000'];['h2gf ',configtype,', eta4, 5000'];['h2gf ',configtype,', eta5, 5000']; ['h2gf ',configtype,', eta6, 5000']; ...
    ['hgf ',configtype]};
mean_ze = [mean(All_h2gf(1).eta(1).samples.ze(:,1));mean(All_h2gf(2).eta(1).samples.ze(:,1)); mean(All_h2gf(3).eta(1).samples.ze(:,1)); ...
    mean(All_h2gf(4).eta(1).samples.ze(:,1));mean(All_h2gf(5).eta(1).samples.ze(:,1)); mean(All_h2gf(6).eta(1).samples.ze(:,1)); ...
    mean(All_h2gf(1).eta(2).samples.ze(:,1));mean(All_h2gf(2).eta(2).samples.ze(:,1)); mean(All_h2gf(3).eta(2).samples.ze(:,1)); ...
    mean(All_h2gf(4).eta(2).samples.ze(:,1));mean(All_h2gf(5).eta(2).samples.ze(:,1)); mean(All_h2gf(6).eta(2).samples.ze(:,1)); ...
    mean(All_h2gf(1).eta(3).samples.ze(:,1));mean(All_h2gf(2).eta(3).samples.ze(:,1)); mean(All_h2gf(3).eta(3).samples.ze(:,1)); ...
    mean(All_h2gf(4).eta(3).samples.ze(:,1));mean(All_h2gf(5).eta(3).samples.ze(:,1)); mean(All_h2gf(6).eta(3).samples.ze(:,1)); ...
    mean(All_h2gf(1).eta(4).samples.ze(:,1));mean(All_h2gf(2).eta(4).samples.ze(:,1)); mean(All_h2gf(3).eta(4).samples.ze(:,1)); ...
    mean(All_h2gf(4).eta(4).samples.ze(:,1));mean(All_h2gf(5).eta(4).samples.ze(:,1)); mean(All_h2gf(6).eta(4).samples.ze(:,1)); ...
    mean(All_hgf.hgf_est_srl2_summary.ze)];
ste_ze = [std(All_h2gf(1).eta(1).samples.ze(:,1))/sqrt(length(All_h2gf(1).eta(1).samples.ze)); ...
    std(All_h2gf(2).eta(1).samples.ze(:,1))/sqrt(length(All_h2gf(2).eta(1).samples.ze)); ...
    std(All_h2gf(3).eta(1).samples.ze(:,1))/sqrt(length(All_h2gf(3).eta(1).samples.ze)); ...
    std(All_h2gf(4).eta(1).samples.ze(:,1))/sqrt(length(All_h2gf(4).eta(1).samples.ze)); ...
    std(All_h2gf(5).eta(1).samples.ze(:,1))/sqrt(length(All_h2gf(5).eta(1).samples.ze)); ...
    std(All_h2gf(6).eta(1).samples.ze(:,1))/sqrt(length(All_h2gf(6).eta(1).samples.ze)); ...
    std(All_h2gf(1).eta(2).samples.ze(:,1))/sqrt(length(All_h2gf(1).eta(2).samples.ze)); ...
    std(All_h2gf(2).eta(2).samples.ze(:,1))/sqrt(length(All_h2gf(2).eta(2).samples.ze)); ...
    std(All_h2gf(3).eta(2).samples.ze(:,1))/sqrt(length(All_h2gf(3).eta(2).samples.ze)); ...
    std(All_h2gf(4).eta(2).samples.ze(:,1))/sqrt(length(All_h2gf(4).eta(2).samples.ze)); ...
    std(All_h2gf(5).eta(2).samples.ze(:,1))/sqrt(length(All_h2gf(5).eta(2).samples.ze)); ...
    std(All_h2gf(6).eta(2).samples.ze(:,1))/sqrt(length(All_h2gf(6).eta(2).samples.ze)); ...
    std(All_h2gf(1).eta(3).samples.ze(:,1))/sqrt(length(All_h2gf(1).eta(3).samples.ze)); ...
    std(All_h2gf(2).eta(3).samples.ze(:,1))/sqrt(length(All_h2gf(2).eta(3).samples.ze)); ...
    std(All_h2gf(3).eta(3).samples.ze(:,1))/sqrt(length(All_h2gf(3).eta(3).samples.ze)); ...
    std(All_h2gf(4).eta(3).samples.ze(:,1))/sqrt(length(All_h2gf(4).eta(3).samples.ze)); ...
    std(All_h2gf(5).eta(3).samples.ze(:,1))/sqrt(length(All_h2gf(5).eta(3).samples.ze)); ...
    std(All_h2gf(6).eta(3).samples.ze(:,1))/sqrt(length(All_h2gf(6).eta(3).samples.ze)); ...
    std(All_h2gf(1).eta(4).samples.ze(:,1))/sqrt(length(All_h2gf(1).eta(4).samples.ze)); ...
    std(All_h2gf(2).eta(4).samples.ze(:,1))/sqrt(length(All_h2gf(2).eta(4).samples.ze)); ...
    std(All_h2gf(3).eta(4).samples.ze(:,1))/sqrt(length(All_h2gf(3).eta(4).samples.ze)); ...
    std(All_h2gf(4).eta(4).samples.ze(:,1))/sqrt(length(All_h2gf(4).eta(4).samples.ze)); ...
    std(All_h2gf(5).eta(4).samples.ze(:,1))/sqrt(length(All_h2gf(5).eta(4).samples.ze)); ...
    std(All_h2gf(6).eta(4).samples.ze(:,1))/sqrt(length(All_h2gf(6).eta(4).samples.ze)); ...
    std(All_hgf.hgf_est_srl2_summary.ze)/sqrt(length(All_hgf.hgf_est_srl2_summary.ze));];

T = table(mean_ze,ste_ze,'RowNames',ModelName);

figure('Color',[1 1 1],'pos',[10 10 700 500]);
% Get the table in string form.
TString = evalc('disp(T)');
% Use TeX Markup for bold formatting and underscores.
TString = strrep(TString,'<strong>','\bf');
TString = strrep(TString,'</strong>','\rm');
TString = strrep(TString,'_','\_');
% Get a fixed-width font.
FixedWidth = get(0,'FixedWidthFontName');
% Output the table using the annotation command.
annotation(gcf,'Textbox','String',TString,'Interpreter','Tex','FontName',FixedWidth,'Units','Normalized','Position',[0 0 1 1]);
saveas(gcf,['srl2_stats_ze_',configtype],'fig');
print(['srl2_stats_ze_',configtype],'-dtiff');

% close all;
end


