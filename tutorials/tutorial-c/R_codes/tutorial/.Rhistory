source('~/Dropbox/Research/Conferences/2020_CPC_Zurich/cpc2020/R_Codes/tutorial/1_test_stan.R')
# Fit the exponential model ---------------------------------------------------
fit_exp <- dd_exp("example", niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2)
# Load hBayesDM library
library(hBayesDM)
# Fit the exponential model ---------------------------------------------------
fit_exp <- dd_exp("example", niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2)
# Here, we begin to explore the delay discounting models in hBayesDM
# Exponential model
?dd_exp
# Hyperbolic model
?dd_hyperbolic
# Constant Sensitivity model (not used in example, but feel free to take a look!)
?dd_cs
# Are the data generated from the exponential or hyperbolic model? Is there
# evidence of preference switching?
# Fit the exponential model ---------------------------------------------------
fit_exp <- dd_exp("example", niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2)
# Important!!! Always check for convergence before moving on
# Make sure the chains are "mixing" well ("furry caterpillars")
plot(fit_exp, type = "trace")
# Return a data.frame with all parameter names and Rhat values
rhat(fit_exp)
# To only check if Rhat values are under a specified criteria,
# use the "less" argument
rhat(fit_exp, less = 1.1)
# Visualize posterior distributions in multiple ways
# Method 1 -- Group parameter histograms
plot(fit_exp)
# Method 2 -- Display individual parameters
plotInd(fit_exp, pars = "r")
# Method 3 -- Plot highest density intervals (HDI)
plotHDI(fit_exp$parVals$mu_r)
# Fit the hyperbolic model ----------------------------------------------------
fit_hyp <- dd_hyperbolic("example", niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2)
# Again, check for convergence
plot(fit_hyp, type = "trace")
# And for Rhat values
rhat(fit_hyp, less = 1.1)
# Now, use LOOIC to compare model fits ----------------------------------------
printFit(fit_exp, fit_hyp)
# Hyperbolic model is closest to negative infinity, so it provides the best fit!
# Now, we can make inference with the best-fitting model ----------------------
# Look at the posterior means for each subject/parameter
fit_hyp$allIndPars
# We can find out if discounting rate is related to impulsivity as measured by
# the Barratt Impulsiveness Scale (BIS)
# Read in BIS scores
bis_scores <- read.table(file.choose(), header = T, sep = "\t")
# Run correlation test between discounting rate and BIS score
cor.test(fit_hyp$allIndPars$k, bis_scores$x)
# Variational bayes!
# Let's compare MCMC estimates and VB estimates
fit_hyp_vb <- dd_hyperbolic("example", niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2, vb=TRUE)
# plot posterior means
plot(fit_hyp$allIndPars$k,
fit_hyp_vb$allIndPars$k,
xlab = "MCMC", ylab="VB")
# plot y=x line
abline(0,1)
# Important!!! Always check for convergence before moving on
# Make sure the chains are "mixing" well ("furry caterpillars")
plot(fit_exp, type = "trace")
plot(fit_exp)
# Important!!! Always check for convergence before moving on
# Make sure the chains are "mixing" well ("furry caterpillars")
plot(fit_exp, type = "trace")
# Return a data.frame with all parameter names and Rhat values
rhat(fit_exp)
?save.image
# Visualize posterior distributions in multiple ways
# Method 1 -- Group parameter histograms
plot(fit_exp)
# We can find out if discounting rate is related to impulsivity as measured by
# the Barratt Impulsiveness Scale (BIS)
# Read in BIS scores
bis_scores <- read.table(file.choose(), header = T, sep = "\t")
bis_scores
# Run correlation test between discounting rate and BIS score
cor.test(fit_hyp$allIndPars$k, bis_scores$x)
# plot posterior means
plot(fit_hyp$allIndPars$k,
fit_hyp_vb$allIndPars$k,
xlab = "MCMC", ylab="VB")
# plot y=x line
abline(0,1)
# First, read in data from Sokol-Hessner (2009)
# The "system.file" command can be used to locate the data in hBayesDM
# These are data collected when subjects were asked to attend to each trial
path_to_attend_data <- system.file("extdata/ra_data_attend.txt", package="hBayesDM")
# These are data collected when subjects were asked to view their choice as one
# within a large portfolio (i.e. think like a stock trader!)
path_to_regulate_data <- system.file("extdata/ra_data_reappraisal.txt", package="hBayesDM")
# We can now fit the models to each dataset and then compare parameters!
# Fit the full risk aversion model to "attend" and "regulate" data (i.e. prospect theory)
fit_att_1 <- ra_prospect(path_to_attend_data, niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2)
fit_reg_1 <- ra_prospect(path_to_regulate_data, niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2)
# Check convergence for both models
plot(fit_att_1, "trace"); rhat(fit_att_1, 1.1)
plot(fit_reg_1, "trace"); rhat(fit_reg_1, 1.1)
# Now, we can compare posterior distributions of parameters across conditions
# The "plotHDI" function is good for this
plotHDI(fit_att_1$parVals$mu_rho - fit_reg_1$parVals$mu_rho)
plotHDI(fit_att_1$parVals$mu_lambda - fit_reg_1$parVals$mu_lambda)
plotHDI(fit_att_1$parVals$mu_tau - fit_reg_1$parVals$mu_tau)
# How much of the difference in probability mass is above 0? (~0.5 if no difference)
mean((fit_att_1$parVals$mu_rho - fit_reg_1$parVals$mu_rho)>0)
mean((fit_att_1$parVals$mu_lambda - fit_reg_1$parVals$mu_lambda)>0)
mean((fit_att_1$parVals$mu_tau - fit_reg_1$parVals$mu_tau)>0)
# Locate file path to go/ no-go data
gng_dat <- file.choose()
# Load rstan library
library(rstan)
## Checking if Stan works before progressing
# Load rstan library
library(rstan)
# Find the example here: https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started#example-1-eight-schools
# We will only run this to see if Stan works, so understanding the code below
# is not important right now.
# Stan model
m1 <- "data {
int<lower=0> J;
real y[J];
real<lower=0> sigma[J];
}
parameters {
real mu;
real<lower=0> tau;
real eta[J];
}
transformed parameters {
real theta[J];
for (j in 1:J)
theta[j] = mu + tau * eta[j];
}
model {
target += normal_lpdf(eta | 0, 1);
target += normal_lpdf(y | theta, sigma);
}"
# Data to be fit
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
# Fit model using 1000 iterations on 2 different chains (not parallel)
# Note that the model compiles at the beginning, so it takes time to start
fit1 <- stan(model_code = m1, data = schools_dat,
iter = 1000, chains = 2)
# Same fit as above, but test parallel computing
#fit2 <- stan(model_code = m1, data = schools_dat,
#             iter = 1000, chains = 2, cores = 2)
# Now, use LOOIC to compare model fits ----------------------------------------
printFit(fit_exp, fit_hyp)
n
# Now, we can make inference with the best-fitting model ----------------------
# Look at the posterior means for each subject/parameter
fit_hyp$allIndPars
# We can find out if discounting rate is related to impulsivity as measured by
# the Barratt Impulsiveness Scale (BIS)
# Read in BIS scores
bis_scores <- read.table(file.choose(), header = T, sep = "\t")
# Run correlation test between discounting rate and BIS score
cor.test(fit_hyp$allIndPars$k, bis_scores$x)
# Variational bayes!
# Let's compare MCMC estimates and VB estimates
fit_hyp_vb <- dd_hyperbolic("example", niter = 2000, nwarmup = 1000,
nchain = 2, ncore = 2, vb=TRUE)
# plot posterior means
plot(fit_hyp$allIndPars$k,
fit_hyp_vb$allIndPars$k,
xlab = "MCMC", ylab="VB")
# plot y=x line
abline(0,1)
